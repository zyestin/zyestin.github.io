<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - zyestin</title>
        <link>https://zyestin.github.io/zyestin/posts/</link>
        <description>All Posts | zyestin</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>zyestin@gmail.com (zyestin)</managingEditor>
            <webMaster>zyestin@gmail.com (zyestin)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 05 Mar 2024 19:36:11 &#43;0800</lastBuildDate><atom:link href="https://zyestin.github.io/zyestin/posts/" rel="self" type="application/rss+xml" /><item>
    <title>瀑布流最佳实践：双列均匀分布，高度计算&amp;缓存</title>
    <link>https://zyestin.github.io/zyestin/waterfall-perfect/</link>
    <pubDate>Tue, 05 Mar 2024 19:36:11 &#43;0800</pubDate>
    <author>zyestin</author>
    <guid>https://zyestin.github.io/zyestin/waterfall-perfect/</guid>
    <description><![CDATA[MasonryFlashList 瀑布流布局列高不均 解决方案 瀑布流布局列高不均 演示效果
最终我对此做了回复 👉🏻 issues/946#issuecomment-1972392998
方法1：【仅解决了双列】58的方案 方案源码 👉🏻 https://github.com/jiangleo/react-native-classroom/blob/main/src/11_Waterfall/lib/RecyclerListView/WaterfallLayoutProvider.ts
但，只修改为了 支持双列瀑布流布局，也不是基于最新recyclerlistview版本
58大佬分析的 recyclerlistview的布局原理，Nice 方法2：【较完美的】Masonry layout manager and provider #526 方案 可惜，并没有被merge，作者似乎不再关注这个项目了。
然后，也没有提供patch，但有人提供了package 和 Demo，非常赞！
👉🏻 方案来源
package: recyclerlistview-masonrylayoutmanager Demo: https://snack.expo.dev/@robertli93/grid_example
Demo效果非常棒！ 滚动流畅 + 布局均匀 为何未被合并？
难道是因为PR评论区的已知小bug？还是作者不再维护？
方法3:【最完美】MasonryFlashList 本身支持优化排列 见官方文档 masonry#optimizeitemarrangement
1 If enabled, MasonryFlashList will try to reduce difference in column height by modifying item order. If true, specifying overrideItemLayout is required. Default value is false. 在看源码时，发现MasonryFlashList.tsx中，底部可见如下说明]]></description>
</item>
<item>
    <title>最佳实践 点赞(收藏等)状态的全局同步更新</title>
    <link>https://zyestin.github.io/zyestin/status-sync-global/</link>
    <pubDate>Mon, 18 Dec 2023 12:00:11 &#43;0800</pubDate>
    <author>zyestin</author>
    <guid>https://zyestin.github.io/zyestin/status-sync-global/</guid>
    <description><![CDATA[有这么一个常见的需求 在对某个帖子进行点赞后，该帖子所出现的各个地方，e.g.帖子列表(可能多处)、帖子详情(可能多个)，点赞状态实时同步、数量加/减1同步。
iOS 方案 在iOS，我是在每个帖子 所对应的 Model(数据)对象里 监听通知，判断 帖子ID，ID匹配 则更新 点赞状态，以此达到操作点赞后 实时同步同一帖子的点赞状态，非常简单好使！
RN 方案 但RN里，数据是一个{id:xx, ...}这样的对象，是不支持像在iOS那样，在这样对象里 写监听通知的代码的。
于是，那就放到hooks去实现。
Q：那需要什么样的hooks呢？ A：也就是需要怎样的 设计最优雅的API，or调用方式 （如下），才是决定了设计什么样的hooks函数
最优雅API 调用方式 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 const PostComp = () =&gt; { const { isActive: liked, activeCount: likeCount, changeActiveStatus: changeLikeStatus, } = useActiveStatus({ id: id, originalActiveCount: originalLikeCount, originalActiveStatus: originalLikedStatus, notificationKey: kPostLikeStatusChangeNotification, requestFunc: ({ isActive }) =&gt; { return likePost({ postId: id, isLike: isActive }); // send request to toggle liked status }, }); return ( &lt;View&gt; &lt;Icon liked={liked} /&gt; &lt;Text&gt;{likeCount}&lt;/Text&gt; &lt;Button onPress={() =&gt; { changeLikeStatus() }} /&gt; &lt;/View&gt; ) } useActiveStatus这个hooks的实现源码， 如下]]></description>
</item>
<item>
    <title>第一次提交PR给react-native</title>
    <link>https://zyestin.github.io/zyestin/rn-pull-request/</link>
    <pubDate>Mon, 18 Dec 2023 12:00:11 &#43;0800</pubDate>
    <author>zyestin</author>
    <guid>https://zyestin.github.io/zyestin/rn-pull-request/</guid>
    <description><![CDATA[用了3年RN了，第一次给RN提交PR，有点激动，值得记录呀！
操作记录 git操作全在github完成
2023.12.05 7:52PM 提交 fork -&gt; 创建分支 -&gt; 改代码 -&gt; 提交
然后进入pull request tab ，就能看到Compare &amp; pull request入口，点击它
生成的PR地址： https://github.com/facebook/react-native/pull/41803
然后就进入 PR描述编辑区，按提示编辑完，提交即可
首次提交PR，提示需要签署CLA
跳转到这里 https://github.com/facebook/react-native/pull/41803/checks?check_run_id=19326140445
再打开 https://code.facebook.com/cla， 进行签署CLA
签署后，这个页面就进入一个无法编辑的状态，虽然顶部有提示，如果在签CLA之前已经提交了一个，再耐心等待会，会自动处理的
👉🏻这个友人的经历是很好的借鉴
于是，从21:49，等啊等，到了 23:54，才有反馈
第二天早上一看 10:13，还给了我建议，我点击一下 Commit suggestion就ok了
最后就差maintainer批准了 一般多久批准呢？ 浏览了2个merged的PR，都是2天
2023.12.13 11:24PM 终于收到邮件 PR被合并 1 This pull request was successfully merged by @zyestin in 5217cc9. 并且紧接着收到邮件 PR被关闭 1 Closed #41803 via 5217cc9. 那何时 带有我贡献的代码 会被发布呢？
等待下一个版本被推出的时候咯
待续~]]></description>
</item>
<item>
    <title> 实现 FlatList 、flashList、masonryFlashList 各种列表的自动滚动动画</title>
    <link>https://zyestin.github.io/zyestin/waterfall-list-autoscroll/</link>
    <pubDate>Wed, 01 Nov 2023 12:00:11 &#43;0800</pubDate>
    <author>zyestin</author>
    <guid>https://zyestin.github.io/zyestin/waterfall-list-autoscroll/</guid>
    <description><![CDATA[ScrollView滚动动画 实现起来就很容易
源码 展开查看 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 import React, { useRef, useEffect } from &#34;react&#34;; import { ScrollView, Text, View, Animated, Easing } from &#34;react-native&#34;; /** * ScrollView自动滚动了！ */ const AutoScrollScrollView = () =&gt; { const scrollViewRef = useRef(); const scrollY = useRef(new Animated.]]></description>
</item>
<item>
    <title>hooks开发工具</title>
    <link>https://zyestin.github.io/zyestin/tool-dev-react/</link>
    <pubDate>Wed, 01 Nov 2023 12:00:11 &#43;0800</pubDate>
    <author>zyestin</author>
    <guid>https://zyestin.github.io/zyestin/tool-dev-react/</guid>
    <description><![CDATA[常用hooks依赖检查，从源头提醒避免奇葩bug https://github.com/facebook/react/issues/14920
ESLint提供，检查useEffect依赖 &amp;&amp; autoFix，
用上后 估计能大大降低 无法获取state最新值、漏掉依赖后奇怪的bug]]></description>
</item>
<item>
    <title>npm 工具</title>
    <link>https://zyestin.github.io/zyestin/tool-npm/</link>
    <pubDate>Wed, 01 Nov 2023 12:00:11 &#43;0800</pubDate>
    <author>zyestin</author>
    <guid>https://zyestin.github.io/zyestin/tool-npm/</guid>
    <description><![CDATA[ patch-package 补丁工具使用 ]]></description>
</item>
<item>
    <title>patch-package 补丁工具使用</title>
    <link>https://zyestin.github.io/zyestin/tool-npm-patch/</link>
    <pubDate>Wed, 01 Nov 2023 12:00:11 &#43;0800</pubDate>
    <author>zyestin</author>
    <guid>https://zyestin.github.io/zyestin/tool-npm-patch/</guid>
    <description><![CDATA[patch-package 官方地址 https://www.npmjs.com/package/patch-package
首次安装 失败&amp;&amp;解决 package.json内scripts下 添加
1 &#34;postinstall&#34;: &#34;patch-package&#34; 安装，失败
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 npm i patch-package 10:18:05 npm ERR! code ECONNREFUSED npm ERR! errno ECONNREFUSED npm ERR! FetchError: request to https://mirrors.huaweicloud.com/repository/npm/patch-package failed, reason: connect ECONNREFUSED 127.0.0.1:1087 npm ERR! at ClientRequest.&lt;anonymous&gt; (/usr/local/lib/node_modules/npm/node_modules/node-fetch-npm/src/index.js:68:14) npm ERR! at ClientRequest.emit (events.js:400:28) npm ERR!]]></description>
</item>
<item>
    <title>React Native 在VSCode编码提效</title>
    <link>https://zyestin.github.io/zyestin/vscode-efficient/</link>
    <pubDate>Wed, 01 Nov 2023 12:00:11 &#43;0800</pubDate>
    <author>zyestin</author>
    <guid>https://zyestin.github.io/zyestin/vscode-efficient/</guid>
    <description><![CDATA[插件 代码智能提示 copilot
触发内联建议 Option (⌥)+\ https://docs.github.com/zh/copilot/configuring-github-copilot/configuring-github-copilot-in-your-environment?tool=vscode#keyboard-shortcuts-for-macos
(键联提示)代码片段
ES7+ React/Redux/React-Native snippets massCode assistant (配合打开massCode App使用) 标签修改 自动首尾同步 Auto Rename Tag
拼写检测 Code Spell Checker
格式化 prettier
提升阅读感受
Gitlens 悬停查看代码改动人 Material Icon Theme / vscode-icons 侧边导航区 目录展示icon indent-rainbow 标签开闭连线 Image Preview 在图片路径引用行 左侧展示icon code snippets React/Redux/React-Native snippets
指令说明：
https://github.com/ults-io/vscode-react-javascript-snippets/blob/HEAD/docs/Snippets.md
优点：
对常用的hooks支持的简直完美
可以试试输入useeff...。 会提示useEffectSnippet，enter后挨个填词，tab切换光标，set方法自动驼峰，简直完美！ 使用rnfes创建组件，会根据文件名 命名组件 想根据英文记忆一下快捷指令名称，可以参考 Fullstack React/React Native snippets
对快捷指令 都有英文解释
Mac、VSC快捷键 Mac 系统自带
(shift+) ctrl+ (option+) f/b (shift+) ctrl+ p/n VSC 更改了上述快捷键对应的指令，非常糟糕。可以调整下如下 VSC Next Change （Important）]]></description>
</item>
<item>
    <title>React Native 开发沉淀</title>
    <link>https://zyestin.github.io/zyestin/readme/</link>
    <pubDate>Wed, 01 Nov 2023 12:00:11 &#43;0800</pubDate>
    <author>zyestin</author>
    <guid>https://zyestin.github.io/zyestin/readme/</guid>
    <description><![CDATA[一些业务的最佳实践探索 基础组件封装
瀑布流列表base组件 图片base组件 &hellip; 实现 模仿抖音、小红书 输入 #标签 高亮
瀑布流列表
瀑布流最佳实践：双列均匀分布，高度计算&amp;缓存 实现 瀑布流列表·自动滚动动画 实现 横向·瀑布流列表 实现 仿抖音/小红书 对贴图/贴字 进行拖拽、缩放、旋转等复杂手势
封装一个 易用的、远程字体动态下载&amp;应用组件
封装一个 低耦合、易用的文本输入框弹窗
实现 差不多理想的极简RN弹窗
最佳实践 点赞(收藏等)状态的全局同步更新
实践 列表Item精确曝光埋点 [todo]
实践 多tab多列表滑动吸顶效果 [todo]
实践 服务端下发自定义组件代码 前端接收&amp;渲染[todo]
实践 拆包 [todo]
组件库 易用的应用远程字体的text组件库 - react-native-remote-font 其它（提效、工具、学习&hellip;) 探究 代码规范
React Native 编码提效 on VSCode
用脚手架 制作一个RN库 放npm(含踏坑记录)
贡献给react-native的第一个PR
React学习收获
学习《React Hooks 核心原理与实战》笔记 常用hooks依赖检查，从源头提醒避免奇葩bug &hellip; npm 好用工具
patch-package 补丁工具使用 &hellip; 从0到1用Jenkins实现对RN项目一键打包、发布]]></description>
</item>
<item>
    <title>React 学习</title>
    <link>https://zyestin.github.io/zyestin/course-react/</link>
    <pubDate>Wed, 01 Nov 2023 12:00:11 &#43;0800</pubDate>
    <author>zyestin</author>
    <guid>https://zyestin.github.io/zyestin/course-react/</guid>
    <description><![CDATA[ 学习《React Hooks 核心原理与实战》笔记
hooks开发工具
常用hooks依赖检查，从源头提醒避免奇葩bug[todo] &hellip; ]]></description>
</item>
</channel>
</rss>
